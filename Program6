#include <stdio.h>

// Function to perform Bubble Sort in Ascending Order

void bubbleSort(int arr[], int n) {

 for (int i = 0; i < n - 1; i++) {

 // Last i elements are already in place

 for (int j = 0; j < n - i - 1; j++) {

 // Swap if current element is greater than next

 if (arr[j] > arr[j + 1]) {

 int temp = arr[j];

 arr[j] = arr[j + 1];

 arr[j + 1] = temp;

 }

 }

 }

}

// Function to perform Selection Sort in Descending Order

void selectionSort(int arr[], int n) {

 for (int i = 0; i < n - 1; i++) {

 int maxIndex = i;

 for (int j = i + 1; j < n; j++) {

 // Find the maximum element in the unsorted part

 if (arr[j] > arr[maxIndex]) {

 maxIndex = j
}

 }

 // Swap the found maximum element with the first element

 if (maxIndex != i) {

 int temp = arr[i];

 arr[i] = arr[maxIndex];

 arr[maxIndex] = temp;

 }

 }

}

// Function to print the array

void printArray(int arr[], int n) {

 for (int i = 0; i < n; i++) {

 printf("%d ", arr[i]);

 }

 printf("\n");

}

int main() {

 int arr1[100], arr2[100], n;

 // Input size of array

 printf("Enter the number of elements: ");

 scanf("%d", &n);

 // Input elements

 printf("Enter %d elements:\n", n);

 for (int i = 0; i < n; i++) {

 scanf("%d", &arr1[i]);

 arr2[i] = arr1[i]; // Copy to second array for selection sort

 }

 // Perform Bubble Sort

 bubbleSort(arr1, n);
printf("Array after Bubble Sort (Ascending Order):\n");

 printArray(arr1, n);

 // Perform Selection Sort

 selectionSort(arr2, n);

 printf("Array after Selection Sort (Descending Order):\n");

 printArray(arr2, n);

 return 0;

}

